{
  "openapi": "3.0.0",
  "info": {
    "title": "mypadifood API",
    "version": "1.0.0",
    "description": "CRUD API for Week 03 (clients + vendors)"
  },
  "servers": [
    {
      "url": "http://localhost:8083",
      "description": "Local development"
    },
    {
      "url": "https://localfood.onrender.com",
      "description": "Render production"
    }
  ],
  "paths": {
    "/api/clients/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "requestBody": {
          "description": "Client object to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/clients/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Fields to update for client",
          "required": true,
          "content": {
            "application/json": { "schema": { "type": "object" } }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/vendors/": {
      "get": {
        "description": "",
        "responses": {
          "200": { "description": "OK" }
        }
      },
      "post": {
        "description": "",
        "requestBody": {
          "description": "Vendor object to create",
          "required": true,
          "content": {
            "application/json": { "schema": { "type": "object" } }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" },
          "409": { "description": "Conflict" }
        }
      }
    },
    "/api/vendors/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "description": "Fields to update for vendor",
          "required": true,
          "content": {
            "application/json": { "schema": { "type": "object" } }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "400": { "description": "Bad Request" },
          "404": { "description": "Not Found" }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" }
        }
      }
    }
  }
}
